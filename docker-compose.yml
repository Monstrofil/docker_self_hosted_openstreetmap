version: "3.4"
x-postgres-env-config: &x-postgres-env-config
  POSTGRES_USER: "${POSTGRES_USER:-dev}"
  POSTGRES_DB: "${POSTGRES_DB:-dev}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-dev}"
  POSTGRES_HOST: "${POSTGRES_HOST:-postgis}"

services:

  replicator:
    build:
      context: replicator
    environment:
      <<: *x-postgres-env-config
    depends_on:
      - postgis
    volumes:
      - replications:/var/replications/

  renderd_db_updater:
    build:
      context: renderd_db_updater
    environment:
      <<: *x-postgres-env-config
      PGPASSWORD: "${POSTGRES_PASSWORD:-dev}"
    depends_on:
      - postgis_renderd
      - nginx
      - replicator

  nginx:
    image: 'nginx:latest'
    depends_on:
      - website
      - editor
    ports:
    - 8080:80
    volumes:
      - ./conf:/etc/nginx/conf.d:ro
      - replications:/var/replications/

  website:
    environment:
      <<: *x-postgres-env-config
    build:
      context: website
      args:
        TILESERVER_HOST: ${TILESERVER_HOST}
    depends_on:
      - postgis
    volumes:
      - /ssd/osm2/opt/:/osm/

  editor:
    environment:
      <<: *x-postgres-env-config
    build:
      context: editor
      target: nginx_id_editor
      args:
        OPENSTREETMAP_HOST: ${OPENSTREETMAP_HOST}
    depends_on:
      - postgis

  postgis:
    image: postgres:12.3
    restart: unless-stopped
    environment:
      <<: *x-postgres-env-config
      PGPASSWORD: "${POSTGRES_PASSWORD:-dev}"
    volumes:
      - pgdata:/var/lib/postgresql/data/

  renderer:
    build:
      context: mapnik
      target: renderd
      args:
        <<: *x-postgres-env-config
    environment:
      <<: *x-postgres-env-config
      PGPASSWORD: "${POSTGRES_PASSWORD:-dev}"
      POSTGRES_HOST: postgis_renderd
    entrypoint: bash /run.sh
    depends_on:
      - renderd_db_updater
    volumes:
      - renderd:/var/run/renderd

  apache:
    build:
      context: mapnik
      target: apache
      args:
        <<: *x-postgres-env-config
    ports:
      - 8082:80
    environment:
      <<: *x-postgres-env-config
      PGPASSWORD: "${POSTGRES_PASSWORD:-dev}"
    depends_on:
      - renderd_db_updater
      - renderer
    volumes:
      - renderd:/var/run/renderd

  postgis_renderd:
    image: mdillon/postgis
    restart: unless-stopped
    environment:
      <<: *x-postgres-env-config
      PGPASSWORD: "${POSTGRES_PASSWORD:-dev}"
    volumes:
      - pg_renderd_data:/var/lib/postgresql/data/

networks:
  backend:

volumes:
  pgdata:
  pg_renderd_data:
  replications:
  renderd: